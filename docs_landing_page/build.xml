<project name="example" default="default"
 xmlns:if="ant:if"
 xmlns:unless="ant:unless"
>
  <!-- (c) Boundless -->
  <property name="build" value="${basedir}/build"/>
  <property name="themes" value="../themes"/>
  
  <target name="clean" description="cleans up build directory">
    <echo>Cleaning up ${build}...</echo>
    <delete dir="${build}"/>
  </target>

  <target name="init">
    <mkdir dir="${build}"/>
  </target>
  
  <target name="default">
    <antcall target="sphinx">
        <param name="tags" value="-t instructor"/>
        <param name="builder" value="html"/>
        <param name="outdir" value="${build}/html/"/>
    </antcall>
    <antcall target="open">
        <param name="file" value="${build}/html/index.html"/>
    </antcall>
  </target>

  <!-- sphinx-build -->  
  <target name="sphinx" depends="init">
    <echo>Building sphinx materials...</echo>
    <exec executable="sphinx-build" failonerror="true">
      <arg line="${tags}"/>
      <arg line="-W"/>
      <arg line="-b ${builder}"/>
      <arg line="-d ${build}/doctree"/>
      <arg path="${basedir}/src"/>
      <arg path="${outdir}"/>
    </exec>
    <!-- fix external links -->
    <echo>Clean up external links in ${outdir}</echo>
    <replace dir="${outdir}">
       <include name="**/*.html"/>
       <replacefilter token="class=&quot;reference external&quot;"
                      value="class=&quot;reference external&quot; target=&quot;_blank&quot;"/>
       <replacefilter token="class=&quot;reference download internal&quot;"
                      value="class=&quot;reference download internal&quot; target=&quot;_blank&quot;"/>
    </replace>
  </target>
  
  <!-- Used to display generated file at end of task -->
  <target name="open">
    <echo>File exists in ${file}</echo>
    
    <!-- mac -->
    <available file="/usr/bin/open" type="file"
          property="open.present"/>
    <exec executable="open" if:set="open.present">
       <arg line="${file}"/>
    </exec>
    
    <!-- linux -->
    <!--
    <available file="/usr/bin/xdg-open" type="file"
          property="xdg-open.present"/>
    <exec executable="xdg-open" if:set="xdg-open.present">
       <arg line="${file}"/>
    </exec>
    -->
    
    <!-- windows -->
    <condition property="cmd.present" value="true">
       <os family="windows" />
    </condition>
    <exec executable="cmd" if:set="cmd.present"
       spawn="yes">
        <arg value="/c" />
        <arg value="${file}" />
    </exec>
  </target>
  
</project>
